<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.pairtodo.mapper.TodoMapper">
  <resultMap id="BaseResultMap" type="com.example.pairtodo.model.Todo">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="creator_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="assignee_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="is_shared" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="start_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="end_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="recurrence_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="recurrence_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.example.pairtodo.model.Todo">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="creator_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="assignee_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="is_shared" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="start_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="end_date" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="recurrence_type" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="recurrence_count" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="created_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="description" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, creator_id, assignee_id, is_shared, type, start_date, end_date, recurrence_type, 
    recurrence_count, status, created_time, updated_time
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.example.pairtodo.model.TodoExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from todo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.example.pairtodo.model.TodoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from todo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from todo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from todo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.pairtodo.model.TodoExample">
    delete from todo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.pairtodo.model.Todo">
    insert into todo (id, title, creator_id, 
      assignee_id, is_shared, type, 
      start_date, end_date, recurrence_type, 
      recurrence_count, status, created_time, 
      updated_time, description)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{creatorId,jdbcType=BIGINT}, 
      #{assigneeId,jdbcType=BIGINT}, #{isShared,jdbcType=BIT}, #{type,jdbcType=TINYINT}, 
      #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, #{recurrenceType,jdbcType=TINYINT}, 
      #{recurrenceCount,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{updatedTime,jdbcType=TIMESTAMP}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.pairtodo.model.Todo">
    insert into todo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="assigneeId != null">
        assignee_id,
      </if>
      <if test="isShared != null">
        is_shared,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="recurrenceType != null">
        recurrence_type,
      </if>
      <if test="recurrenceCount != null">
        recurrence_count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="assigneeId != null">
        #{assigneeId,jdbcType=BIGINT},
      </if>
      <if test="isShared != null">
        #{isShared,jdbcType=BIT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="recurrenceType != null">
        #{recurrenceType,jdbcType=TINYINT},
      </if>
      <if test="recurrenceCount != null">
        #{recurrenceCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.pairtodo.model.TodoExample" resultType="java.lang.Long">
    select count(*) from todo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update todo
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=BIGINT},
      </if>
      <if test="row.title != null">
        title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.creatorId != null">
        creator_id = #{row.creatorId,jdbcType=BIGINT},
      </if>
      <if test="row.assigneeId != null">
        assignee_id = #{row.assigneeId,jdbcType=BIGINT},
      </if>
      <if test="row.isShared != null">
        is_shared = #{row.isShared,jdbcType=BIT},
      </if>
      <if test="row.type != null">
        type = #{row.type,jdbcType=TINYINT},
      </if>
      <if test="row.startDate != null">
        start_date = #{row.startDate,jdbcType=DATE},
      </if>
      <if test="row.endDate != null">
        end_date = #{row.endDate,jdbcType=DATE},
      </if>
      <if test="row.recurrenceType != null">
        recurrence_type = #{row.recurrenceType,jdbcType=TINYINT},
      </if>
      <if test="row.recurrenceCount != null">
        recurrence_count = #{row.recurrenceCount,jdbcType=INTEGER},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=TINYINT},
      </if>
      <if test="row.createdTime != null">
        created_time = #{row.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updatedTime != null">
        updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.description != null">
        description = #{row.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update todo
    set id = #{row.id,jdbcType=BIGINT},
      title = #{row.title,jdbcType=VARCHAR},
      creator_id = #{row.creatorId,jdbcType=BIGINT},
      assignee_id = #{row.assigneeId,jdbcType=BIGINT},
      is_shared = #{row.isShared,jdbcType=BIT},
      type = #{row.type,jdbcType=TINYINT},
      start_date = #{row.startDate,jdbcType=DATE},
      end_date = #{row.endDate,jdbcType=DATE},
      recurrence_type = #{row.recurrenceType,jdbcType=TINYINT},
      recurrence_count = #{row.recurrenceCount,jdbcType=INTEGER},
      status = #{row.status,jdbcType=TINYINT},
      created_time = #{row.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP},
      description = #{row.description,jdbcType=LONGVARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update todo
    set id = #{row.id,jdbcType=BIGINT},
      title = #{row.title,jdbcType=VARCHAR},
      creator_id = #{row.creatorId,jdbcType=BIGINT},
      assignee_id = #{row.assigneeId,jdbcType=BIGINT},
      is_shared = #{row.isShared,jdbcType=BIT},
      type = #{row.type,jdbcType=TINYINT},
      start_date = #{row.startDate,jdbcType=DATE},
      end_date = #{row.endDate,jdbcType=DATE},
      recurrence_type = #{row.recurrenceType,jdbcType=TINYINT},
      recurrence_count = #{row.recurrenceCount,jdbcType=INTEGER},
      status = #{row.status,jdbcType=TINYINT},
      created_time = #{row.createdTime,jdbcType=TIMESTAMP},
      updated_time = #{row.updatedTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.pairtodo.model.Todo">
    update todo
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=BIGINT},
      </if>
      <if test="assigneeId != null">
        assignee_id = #{assigneeId,jdbcType=BIGINT},
      </if>
      <if test="isShared != null">
        is_shared = #{isShared,jdbcType=BIT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="recurrenceType != null">
        recurrence_type = #{recurrenceType,jdbcType=TINYINT},
      </if>
      <if test="recurrenceCount != null">
        recurrence_count = #{recurrenceCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.pairtodo.model.Todo">
    update todo
    set title = #{title,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=BIGINT},
      assignee_id = #{assigneeId,jdbcType=BIGINT},
      is_shared = #{isShared,jdbcType=BIT},
      type = #{type,jdbcType=TINYINT},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      recurrence_type = #{recurrenceType,jdbcType=TINYINT},
      recurrence_count = #{recurrenceCount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.pairtodo.model.Todo">
    update todo
    set title = #{title,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=BIGINT},
      assignee_id = #{assigneeId,jdbcType=BIGINT},
      is_shared = #{isShared,jdbcType=BIT},
      type = #{type,jdbcType=TINYINT},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      recurrence_type = #{recurrenceType,jdbcType=TINYINT},
      recurrence_count = #{recurrenceCount,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      updated_time = #{updatedTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>